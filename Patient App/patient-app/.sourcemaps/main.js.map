{"version":3,"sources":["../../src/service/error.handle.ts","../../src/pages/reminders/reminders.ts","../../src/pages/login/login.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/shared/constants.ts","../../src/service/socket.service.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/shared/patient.account.model.ts","../../src/shared/net.request.data.model.ts","../../ws (ignored)","../../src/app/app.component.ts","../../src/pages/home/home.ts","../../src/service/net.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACK;AAG9C;IAEE,4BAAoB,SAA0B;QAA1B,cAAS,GAAT,SAAS,CAAiB;IAAG,CAAC;IAE3C,wCAAW,GAAlB,UAAmB,YAAoB;QACrC,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAClC,KAAK,EAAE,oBAAoB;YAC3B,OAAO,EAAE,YAAY;YACrB,OAAO,EAAE,CAAC,IAAI,CAAC;SAChB,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAXU,kBAAkB;QAD9B,yEAAU,EAAE;yCAGoB,sEAAe;OAFnC,kBAAkB,CAY9B;IAAD,yBAAC;CAAA;AAZ8B;;;;;;;;;;;;;;;;;;;;;;;;ACJ4B;AACkC;AAGhD;AACiB;AACH;AAO3D;IAKE,uBAAmB,OAAsB,EAAS,SAAoB,EAClD,SAA0B,EAAU,cAAiC,EACrE,GAAe,EAAU,WAA+B,EACxD,aAA4B;QAH7B,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAClD,cAAS,GAAT,SAAS,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAmB;QACrE,QAAG,GAAH,GAAG,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAoB;QACxD,kBAAa,GAAb,aAAa,CAAe;QANhD,cAAS,GAAoB,EAAE,CAAC;IAOhC,CAAC;IAED,gCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,4BAAI,GAAJ;QAAA,iBAQC;QAPC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,IAAY;YACjD,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAClC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChC,CAAC,EAAE,gBAAM;YACP,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,uCAAe,GAAf;QAAA,iBAcC;QAbC,IAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;YACzC,OAAO,EAAE,sBAAsB;SAChC,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,EAAE,CAAC;QAClB,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;aAC1C,SAAS,CAAE,UAAC,IAAqB;YAChC,OAAO,CAAC,OAAO,EAAE,CAAC;YAClB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,UAAC,MAAM;YACL,OAAO,CAAC,OAAO,EAAE,CAAC;YAClB,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACT,CAAC;IAED,0CAAkB,GAAlB,UAAmB,QAAuB;QAA1C,iBAqCC;QApCC,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAClC,KAAK,EAAG,MAAM;YACd,OAAO,EAAG,+CAA+C;YACzD,OAAO,EAAG;gBACR;oBACE,IAAI,EAAE,KAAK;oBACX,OAAO,EAAE;wBACP,IAAM,OAAO,GAAG,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC;4BACzC,OAAO,EAAE,cAAc;yBACxB,CAAC,CAAC;wBACH,OAAO,CAAC,OAAO,EAAE,CAAC;wBAClB,KAAI,CAAC,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC;6BAC9B,SAAS,CAAE;4BACR,OAAO,CAAC,OAAO,EAAE,CAAC;4BAClB,IAAM,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC,SAAS,CAAE,UAAC,UAAyB;gCACnE,MAAM,CAAC,UAAU,CAAC,EAAE,IAAI,QAAQ,CAAC,EAAE,CAAC;4BACtC,CAAC,CAAC,CAAC;4BACH,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;wBACrC,CAAC,EACD,UAAC,MAAM;4BACL,OAAO,CAAC,OAAO,EAAE,CAAC;4BAClB,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;wBAC/C,CAAC,CAAC,CAAC;oBAET,CAAC;iBACF;gBACD;oBACE,IAAI,EAAE,IAAI;oBACV,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE;wBACP,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;oBAC5B,CAAC;iBACF;aACF;SACF,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAED,mCAAW,GAAX;QACE,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;IAClC,CAAC;IApFU,aAAa;QAJzB,wEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;WACG;SAC9B,CAAC;4JAM4B,CAA0C;YACvC,mJAAyC,CAAiB;YAChE,8EAAiC,EAAkB;YACzC,UAAa;OARrC,aAAa,CAsFzB;IAAD,CAAC;AAAA;SAtFY,aAAa,e;;;;;;;;;;;;;;;;;;;;;;;ACbgB;AACmD;AAEhD;AAEiB;AAET;AAOrD;IAGE,mBAAmB,OAAsB,EAAS,SAAoB,EAClD,SAA0B,EAAU,cAAiC,EACrE,GAAe,EAAU,WAA+B;QAFzD,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAClD,cAAS,GAAT,SAAS,CAAiB;QAAU,mBAAc,GAAd,cAAc,CAAmB;QACrE,QAAG,GAAH,GAAG,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAoB;IAC5E,CAAC;IAGD,4BAAQ,GAAR,UAAS,IAAY;QAArB,iBAyBC;QAxBC,IAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;YACzC,OAAO,EAAE,mBAAmB;SAC7B,CAAC,CAAC;QACH,OAAO,CAAC,OAAO,EAAE,CAAC;QAClB,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,CAClE,UAAC,IAA0B;YACzB,OAAO,CAAC,OAAO,EAAE,CAAC;YAClB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACzC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,2EAAa,EAAE,EAAC,OAAO,EAAE,KAAI,CAAC,OAAO,EAAC,CAAC,CAAC;gBAC1D,KAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YACpB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,GAAG,CAAC,CAAC,CAAC;gBACnC,KAAI,CAAC,OAAO,GAAG,2BAA2B,CAAC;gBAC3C,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,OAAO,GAAG,eAAe,CAAC;gBAC/B,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;YAC9C,CAAC;QACP,CAAC,EACC,UAAC,MAAM;YACH,OAAO,CAAC,OAAO,EAAE,CAAC;YAClB,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACjD,CAAC,CAAC;IACN,CAAC;IAlCU,SAAS;QAJrB,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;4JAI4B,CAA0C;YACvC,mJAAyC,EAAiB;YAChE,MAAmD;OALjE,SAAS,CAoCrB;IAAD,CAAC;AAAA;SApCY,SAAS,e;;;;;;;ACdtB;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA,sDAAsD;AACtD,wCAAwC;AACxC,EAAE;AACF,qDAAqD;AACrD,sCAAsC;AAE/B,IAAM,iBAAiB,GAAG,kBAAkB,CAAC;AAC7C,IAAM,aAAa,GAAG,OAAO,CAAC;AAE9B,IAAM,gBAAgB,GAAG,kBAAkB,CAAC;AAC5C,IAAM,YAAY,GAAG,MAAM,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;ACVI;AAEP;AACS;AACR;AACoC;AAGrE;IAKE,uBAAoB,UAAsB;QAA1C,iBAKC;QALmB,eAAU,GAAV,UAAU,CAAY;QACxC,IAAI,CAAC,QAAQ,GAAG,gDAAU,CAAC,MAAM,CAAC,kBAAQ;YACxC,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED,4BAAI,GAAJ;QAAA,iBA4BC;QA3BC,IAAI,CAAC,MAAM,GAAG,8CAAE,CAAC,4EAAiB,GAAG,GAAG,GAAG,wEAAa,EAAE,EAAC,WAAW,EAAE,KAAK,EAAC,CAAC,CAAC;QAEhF,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE;YACxB,OAAO,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;YACxC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE;gBAC/B,MAAM,EAAE,KAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC,SAAS;gBAC9C,QAAQ,EAAE,GAAG;aACd,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc,EAAE,iBAAO;YACpC,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,OAAO,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE;YACjC,OAAO,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE;YAC3B,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,yBAAyB,EAAE,kBAAQ;YAChD,IAAI,OAAO,GAAW,QAAQ,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACpC,CAAC,CAAC;IACJ,CAAC;IAED,4BAAI,GAAJ,UAAK,GAAG;QACN,EAAE,EAAC,GAAG,IAAI,EAAE,CAAC,EAAC;YACZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBACjC,UAAU,EAAE,GAAG;aAChB,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,kCAAU,GAAV;QACE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC;IAC3B,CAAC;IAED,+BAAO,GAAP;QACE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAzDU,aAAa;QADzB,yEAAU,EAAE;yCAMqB,wDAAU;OAL/B,aAAa,CA2DzB;IAAD,oBAAC;CAAA;AA3DyB;;;;;;;;;ACR1B;AAAA;AAAA;AAA2E;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJM;AACH;AACkB;AACd;AACN;AAEb;AACM;AACJ;AACiB;AACZ;AACO;AACK;AACH;AAoCxD;IAAA;IAAwB,CAAC;IAAZ,SAAS;QAlCrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,6DAAK;gBACL,kEAAQ;gBACR,qEAAS;gBACT,kFAAa;aACd;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,kEAAW,CAAC,OAAO,CAAC,6DAAK,EAAE,EAAE,EACjC;oBACE,KAAK,EAAE;wBACL,EAAE,YAAY,EAAE,yDAAyD,EAAE,IAAI,EAAE,eAAe,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;wBAC7J,EAAE,YAAY,EAAE,6CAA6C,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;qBAC1I;iBACF,CAAC;gBACE,+EAAgB;aACjB;YACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;YACrB,eAAe,EAAE;gBACf,6DAAK;gBACL,kEAAQ;gBACR,qEAAS;gBACT,kFAAa;aACd;YACD,SAAS,EAAE;gBACT,2EAAS;gBACT,iFAAY;gBACZ,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC;gBACpD,gEAAU;gBACV,iFAAkB;gBAClB,+EAAa;aACd;SACF,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;ACjDtB;AAAA;IAOE,wBAAY,EAAU,EAAE,KAAa,EAAE,QAAgB,EAAE,UAAkB;QACzE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;IAC9B,CAAC;IACH,qBAAC;AAAD,CAAC;;;;;;;;;;ACZD;AAAA;IAME,6BAAY,MAAc,EAAE,QAAgB,EAAE,KAAa,EAAE,OAAY;QACvE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IACH,0BAAC;AAAD,CAAC;;;;;;;;;ACbD,e;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACD;AACY;AACM;AAGZ;AAI/C;IAGE,eAAY,QAAkB,EAAE,SAAoB,EAAE,YAA0B;QAFhF,aAAQ,GAAO,qEAAS,CAAC;QAGvB,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YACpB,gEAAgE;YAChE,iEAAiE;YACjE,SAAS,CAAC,YAAY,EAAE,CAAC;YACzB,YAAY,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAVU,KAAK;QAHjB,wEAAS,CAAC;WACc;SACxB,CAAC;cAIgF;OAHrE,KAAK,CAWjB;IAAD,CAAC;AAAA;SAXY,KAAK,2B;;;;;;;;;;;;;;;;;;;;ACVwB;AACI;AAM9C;IAEE,kBAAmB,OAAsB;QAAtB,YAAO,GAAP,OAAO,CAAe;IAEzC,CAAC;IAJU,QAAQ;QAJpB,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;WACG;SACzB,CAAC;iBAGyC;OAF9B,QAAQ,CAMpB;IAAD,CAAC;AAAA;SANY,QAAQ,e;;;;;;;;;;;;;;;;;;;;;;;ACPoB;AACO;AACe;AACM;AAEF;AAGnE;IAEE,oBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,+BAAU,GAAV,UAAW,KAAa,EAAE,QAAgB;QACxC,IAAI,CAAC,OAAO,GAAG,IAAI,qFAAc,CAAC,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;QACzD,IAAM,cAAc,GAAG,IAAI,2FAAmB,CAAC,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC7E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,2EAAgB,GAAG,GAAG,GAAE,uEAAY,GAAG,oBAAoB,EAAE,cAAc,CAAC,CAAC;IACrG,CAAC;IAED,+BAAU,GAAV,UAAW,OAAuB;QAChC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED,+BAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,iCAAY,GAAZ,UAAa,SAAiB;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,2EAAgB,GAAG,GAAG,GAAE,uEAAY,GAAG,iBAAiB,GAAG,SAAS,CAAC,CAAC;IAC7F,CAAC;IAED,mCAAc,GAAd,UAAe,QAAuB;QACpC,QAAQ,CAAC,QAAQ,GAAG,GAAG,CAAC;QACxB,IAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAChC,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAClC,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9B,IAAM,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC/B,IAAI,MAAc,CAAC;QACnB,IAAM,CAAC,GAAG,QAAQ,CAAC,IAAI,GAAE,EAAE,GAAE,QAAQ,CAAC,KAAK,GAAE,EAAE,GAAE,QAAQ,CAAC,IAAI,GAAE,EAAE,GAAE,QAAQ,CAAC,KAAK,GAAE,EAAE,GAAE,QAAQ,CAAC,OAAO,CAAC;QACzG,IAAM,WAAW,GAAW,IAAI,GAAC,KAAK,GAAC,KAAK,GAAG,KAAK,GAAC,KAAK,GAAC,GAAG,GAAG,IAAI,GAAC,KAAK,GAAG,KAAK,GAAE,GAAG,GAAG,IAAI,CAAC;QAChG,IAAM,YAAY,GAAW,CAAC,CAAC,CAAC;QAChC,EAAE,CAAC,CAAC,WAAW,IAAE,YAAY,CAAC,CAAC,CAAC;YAAA,MAAM,GAAG,GAAG,CAAC;QAAA,CAAC;QAC9C,IAAI,CAAC,CAAC;YAAA,MAAM,GAAG,GAAG;QAAA,CAAC;QACnB,QAAQ,CAAC,cAAc,GAAG,MAAM,CAAC;QACjC,IAAM,cAAc,GAAG,IAAI,2FAAmB,CAAC,kBAAkB,EAAE,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;QACpF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,2EAAgB,GAAG,GAAG,GAAE,uEAAY,GAAG,iBAAiB,EAAE,cAAc,CAAC,CAAC;IACjG,CAAC;IAvCU,UAAU;QADtB,yEAAU,EAAE;yCAGe,wEAAU;OAFzB,UAAU,CAwCtB;IAAD,iBAAC;CAAA;AAxCsB","file":"main.js","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {AlertController} from \"ionic-angular\";\n\n@Injectable()\nexport class ErrorHandleService {\n\n  constructor(private alertCtrl: AlertController) {}\n\n  public handleError(errorMessage: string) {\n    const alert = this.alertCtrl.create({\n      title: 'An error occurred!',\n      message: errorMessage,\n      buttons: ['Ok']\n    });\n    alert.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/error.handle.ts","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {AlertController, IonicPage, LoadingController, NavController, NavParams} from 'ionic-angular';\nimport {ReminderModel} from \"../../shared/reminder.model\";\nimport {PatientAccount} from \"../../shared/patient.account.model\";\nimport {NetService} from \"../../service/net\";\nimport {ErrorHandleService} from \"../../service/error.handle\";\nimport {SocketService} from \"../../service/socket.service\";\n\n@IonicPage()\n@Component({\n  selector: 'page-reminders',\n  templateUrl: 'reminders.html',\n})\nexport class RemindersPage implements OnInit, OnDestroy{\n\n  reminders: ReminderModel[] = [];\n  account: PatientAccount;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,\n              private alertCtrl: AlertController, private loadingService: LoadingController,\n              private net: NetService, private handleError: ErrorHandleService,\n              private socketService: SocketService) {\n  }\n\n  ngOnInit(): void {\n    this.account = this.navParams.get('account');\n    this.init();\n  }\n\n  init() {\n    this.socketService.connect();\n    this.socketService.messages.subscribe((data: string) => {\n      const reminder = JSON.parse(data);\n      this.reminders.push(reminder);\n    }, error1 => {\n      this.handleError.handleError(error1.message);\n    });\n  }\n\n\n  ionViewDidEnter() {\n    const loading = this.loadingService.create({\n      content: 'Loading Reminders...'\n    });\n    loading.present();\n    this.net.getReminders(this.account.patientId)\n      .subscribe( (data: ReminderModel[]) => {\n        loading.dismiss();\n        this.reminders = data;\n        },\n        (error1) => {\n          loading.dismiss();\n          this.handleError.handleError(error1.message);\n        });\n  }\n\n  onReminderFinished(reminder: ReminderModel) {\n    const alert = this.alertCtrl.create({\n      title : 'Done',\n      message : 'Are you sure you have finished this reminder?',\n      buttons : [\n        {\n          text: 'Yes',\n          handler: () => {\n            const loading = this.loadingService.create({\n              content: 'Finishing...'\n            });\n            loading.present();\n            this.net.finishReminder(reminder)\n              .subscribe( () => {\n                  loading.dismiss();\n                  const position = this.reminders.findIndex( (reminderEl: ReminderModel) => {\n                    return reminderEl.id == reminder.id;\n                  });\n                  this.reminders.splice(position, 1);\n                },\n                (error1) => {\n                  loading.dismiss();\n                  this.handleError.handleError(error1.message);\n                });\n\n          }\n        },\n        {\n          text: 'No',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancelled!');\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n  ngOnDestroy(): void {\n    this.socketService.disconnect();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/reminders/reminders.ts","import { Component } from '@angular/core';\nimport {AlertController, IonicPage, LoadingController, NavController, NavParams} from 'ionic-angular';\nimport {NgForm} from \"@angular/forms\";\nimport {NetService} from \"../../service/net\";\nimport {NetResponseDataModel} from \"../../shared/net.response.data.model\";\nimport {ErrorHandleService} from \"../../service/error.handle\";\nimport {PatientAccount} from \"../../shared/patient.account.model\";\nimport {RemindersPage} from \"../reminders/reminders\";\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n  account: PatientAccount;\n  invalid: any;\n  constructor(public navCtrl: NavController, public navParams: NavParams,\n              private alertCtrl: AlertController, private loadingService: LoadingController,\n              private net: NetService, private handleError: ErrorHandleService) {\n  }\n\n\n  onSignin(form: NgForm) {\n    const loading = this.loadingService.create({\n      content: 'Signing you in...'\n    });\n    loading.present();\n    this.net.signinUser(form.value.email, form.value.password).subscribe(\n      (data: NetResponseDataModel) => {\n        loading.dismiss();\n        if (data.resp_event === 20) {\n          this.account = JSON.parse(data.respJson);\n          this.navCtrl.push(RemindersPage, {account: this.account});\n          this.net.setAccount(this.account);\n          this.invalid = '';\n        } else if (data.resp_event === 990) {\n          this.invalid = 'Mail or Password Invalid!';\n          console.log('Password Invalid');\n        } else {\n          this.invalid = 'Login failed!';\n          this.handleError.handleError('Login failed!');\n          }\n    },\n      (error1) => {\n          loading.dismiss();\n          this.handleError.handleError(error1.message);\n      })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 173;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 173\n// module chunks = 2","var map = {\n\t\"../pages/login/login.module\": [\n\t\t724,\n\t\t1\n\t],\n\t\"../pages/reminders/reminders.module\": [\n\t\t723,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 217;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 217\n// module chunks = 2","// export const SocketIO_HostName = 'http://10.0.2.2';\n// export const SocketIO_Port = '10001';\n//\n// export const Service_HostName = 'http://10.0.2.2';\n// export const Service_Port = '8080';\n\nexport const SocketIO_HostName = 'http://localhost';\nexport const SocketIO_Port = '10001';\n\nexport const Service_HostName = 'http://localhost';\nexport const Service_Port = '8080';\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/constants.ts","import * as io from 'socket.io-client';\nimport Socket = SocketIOClient.Socket;\nimport {Observable} from \"rxjs\";\nimport {Injectable} from \"@angular/core\";\nimport {NetService} from \"./net\";\nimport {SocketIO_HostName, SocketIO_Port} from \"../shared/constants\";\n\n@Injectable()\nexport class SocketService {\n  private socket: Socket;\n  public messages: Observable<String>;\n  private socketObserver: any;\n\n  constructor(private netService: NetService) {\n    this.messages = Observable.create(observer => {\n      this.socketObserver = observer;\n    });\n    this.init();\n  }\n\n  init() {\n    this.socket = io(SocketIO_HostName + ':' + SocketIO_Port, {autoConnect: false});\n\n    this.socket.on(\"connect\", () => {\n      console.debug('***Socket Connected***');\n      this.socket.emit('user_connect', {\n        userId: this.netService.getAccount().patientId,\n        userType: '2'\n      });\n    });\n\n    this.socket.on(\"reconnecting\", attempt => {\n      console.debug('***Socket Reconnecting***', attempt);\n    });\n\n    this.socket.on(\"reconnect_failed\", () => {\n      console.debug('***Socket Reconnect failed***');\n    });\n\n    this.socket.on('disconnect', () => {\n      console.debug('***Socket Disconnected***');\n    });\n\n    this.socket.on('goods_list_export_event', response => {\n      let message: string = response;\n      console.log(message);\n      this.socketObserver.next(message);\n    })\n  }\n\n  send(msg) {\n    if(msg != ''){\n      console.log(msg);\n      this.socket.emit('client_message', {\n        msgContent: msg\n      });\n    }\n  }\n\n  disconnect() {\n    this.socket.disconnect();\n  }\n\n  connect() {\n    this.socket.connect();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/socket.service.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\n\nimport { MyApp } from './app.component';\nimport { HomePage } from '../pages/home/home';\nimport {NetService} from \"../service/net\";\nimport {ErrorHandleService} from \"../service/error.handle\";\nimport {LoginPage} from \"../pages/login/login\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {RemindersPage} from \"../pages/reminders/reminders\";\nimport {SocketService} from \"../service/socket.service\";\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    LoginPage,\n    RemindersPage\n  ],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(MyApp),\n    HttpClientModule\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    LoginPage,\n    RemindersPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    NetService,\n    ErrorHandleService,\n    SocketService\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","export class PatientAccount{\n  public id: number;\n  public email: string;\n  public password: string;\n  public patientId: number;\n\n\n  constructor(id: number, email: string, password: string, patient_id: number) {\n    this.id = id;\n    this.email = email;\n    this.password = password;\n    this.patientId = patient_id;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/patient.account.model.ts","\nexport class NetRequestDataModel {\n  public action: string;\n  public reqEvent: number;\n  public seqId: number;\n  public reqJson: any;\n\n  constructor(action: string, reqEvent: number, seqId: number, reqJson: any) {\n    this.action = action;\n    this.reqEvent = reqEvent;\n    this.seqId = seqId;\n    this.reqJson = reqJson;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/net.request.data.model.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 416\n// module chunks = 2","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\nimport {LoginPage} from \"../pages/login/login\";\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = LoginPage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import {Injectable} from \"@angular/core\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {PatientAccount} from \"../shared/patient.account.model\";\nimport {NetRequestDataModel} from \"../shared/net.request.data.model\";\nimport {ReminderModel} from \"../shared/reminder.model\";\nimport {Service_HostName, Service_Port} from \"../shared/constants\";\n\n@Injectable()\nexport class NetService {\n  account: PatientAccount;\n  constructor(private http: HttpClient) {}\n\n  signinUser(email: string, password: string, ) {\n    this.account = new PatientAccount(0, email, password, 0);\n    const netRequestData = new NetRequestDataModel('login', 20, 0, this.account);\n    return this.http.post(Service_HostName + ':'+ Service_Port + '/api/patient/login', netRequestData);\n  }\n\n  setAccount(account: PatientAccount) {\n    this.account = account;\n  }\n\n  getAccount() {\n    return this.account;\n  }\n\n  getReminders(patientId: number) {\n    return this.http.get(Service_HostName + ':'+ Service_Port + '/api/reminders/' + patientId);\n  }\n\n  finishReminder(reminder: ReminderModel) {\n    reminder.finished = 'Y';\n    const data = new Date();\n    const year = data.getFullYear();\n    const month = data.getMonth() + 1;\n    const date = data.getDate();\n    const hours = data.getHours();\n    const mins = data.getMinutes();\n    let ontime: string;\n    const t = reminder.year +''+ reminder.month +''+ reminder.date +''+ reminder.hours +''+ reminder.minutes;\n    const currentTime: number = year*10000*10000 + month*10000*100 + date*10000 + hours *100 + mins;\n    const reminderTime: number = +t;\n    if (currentTime<=reminderTime) {ontime = 'Y';}\n    else {ontime = 'N'}\n    reminder.finishedOntime = ontime;\n    const netRequestData = new NetRequestDataModel('reminderFinished', 30, 0, reminder);\n    return this.http.put(Service_HostName + ':'+ Service_Port + '/api/reminders/', netRequestData);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/service/net.ts"],"sourceRoot":""}